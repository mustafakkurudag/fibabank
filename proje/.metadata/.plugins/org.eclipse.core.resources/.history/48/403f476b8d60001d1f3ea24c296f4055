package com.info.spring.controller;

import java.util.Optional;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.info.spring.dto.CartProductDto;
import com.info.spring.entity.Cart;
import com.info.spring.entity.CartProduct;
import com.info.spring.repository.CartProductRepository;
import com.info.spring.repository.CartRepository;

@RestController
@RequestMapping(value = "/shopping", method = RequestMethod.GET)
public class CartController {
	
	private CartRepository cartRepository;
	private CartProductRepository cartProductRepository;
	
	public CartController(CartRepository cartRepository, CartProductRepository cartProductRepository) {
		this.cartRepository = cartRepository;
		this.cartProductRepository = cartProductRepository;
	}
	
	@GetMapping("/cart/create")
	public long createCart() {
		Cart cart = new Cart(
				0, "Mustafa Kemal KurudaÄŸ", 0, 0);
		cartRepository.save(cart);
		
		return cart.getCartId();
	}
	
	@PostMapping("/cart/add")
	public CartProductDto addProductToCart() {
		CartProductDto cartProductDto = new CartProductDto(
				0, 1, 2, 2, 0);
		cartProductDto.setCartId(1);
		cartProductDto.setSalesPrice(cartProductRepository.findSalesPriceByProductId(cartProductDto.getProductId()));
		cartProductDto.setLineAmount(cartProductDto.getSalesPrice() * cartProductDto.getSalesQuantity());
		
		CartProduct cartProduct = new CartProduct(
				cartProductDto.getCartProductId(), cartProductDto.getProductId(),
				cartProductDto.getSalesQuantity(), cartProductDto.getSalesPrice(),
				cartProductDto.getLineAmount());
		
		Optional<Cart> optional = cartRepository.findById(cartProductDto.getCartId());
		
		if(optional.isPresent()) {
			optional.get().setTotalAmount(optional.get().getTotalAmount() + cartProductDto.getLineAmount());
			cartProduct.setCart(optional.get());
		} 
		
		cartProductRepository.save(cartProduct);
		
		return cartProductDto;
	}
}
